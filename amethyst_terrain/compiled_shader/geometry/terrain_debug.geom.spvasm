; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 7
; Bound: 490
; Schema: 0
               OpCapability Geometry
          %2 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Geometry %main "main" %in_tesselation_level %gl_in %__0 %vertex %in_uv %in_normal %edge_dist %in_view_vec %in_world_pos
               OpExecutionMode %main Triangles
               OpExecutionMode %main Invocations 1
               OpExecutionMode %main OutputLineStrip
               OpExecutionMode %main OutputVertices 6
          %1 = OpString "shader/geometry/terrain_debug.geom"
               OpSource GLSL 450 %1 "// OpModuleProcessed entry-point main
// OpModuleProcessed client vulkan100
// OpModuleProcessed target-env vulkan1.0
// OpModuleProcessed entry-point main
#line 1
#version 450

// Inputs
layout(triangles) in;
layout(location = 0) in vec3 in_normal[];
layout(location = 1) in vec2 in_uv[];
layout(location = 2) in vec3 in_view_vec[];
layout(location = 3) in vec3 in_world_pos[];
layout(location = 4) in float in_tesselation_level[];

// Uniforms
layout (std140, set = 0, binding = 0) uniform Projview {
    mat4 proj;
    mat4 view;
};

layout (std140, set = 1, binding = 0) uniform Args {
    mat4 model;
    vec2 terrain_size;
    float terrain_height_scale;
    float terrain_height_offset;
    bool wireframe;
};
layout(set = 1, binding = 1) uniform sampler2D terrain_height_tex;
layout(set = 1, binding = 2) uniform sampler2D normal;


// Outputs
// layout(triangle_strip, max_vertices = 4) out;
layout(line_strip, max_vertices = 6) out;
layout(location = 0) out VertexData {
    vec3 position;
    vec3 normal;
    vec2 tex_coord;
    vec4 color;
} vertex;
// layout(location = 0) out vec3 out_normal;
// layout(location = 1) out vec2 out_uv;
// layout(location = 2) out vec3 out_view_vec;
// layout(location = 3) out vec3 out_world_pos;
// layout(location = 4) out vec4 wire_color;
layout(location = 4) noperspective out vec3 edge_dist;

vec4 calc_wireframe_color()
{
    if (in_tesselation_level[0] == 64.0)
        return vec4(0.0, 0.0, 1.0, 1.0);
    else if (in_tesselation_level[0] >= 32.0)
        return vec4(0.0, 1.0, 1.0, 1.0);
    else if (in_tesselation_level[0] >= 16.0)
        return vec4(1.0, 1.0, 0.0, 1.0);
    else if (in_tesselation_level[0] >= 8.0)
        return vec4(1.0, 1.0, 1.0, 1.0);
    else
        return vec4(1.0, 0.0, 0.0, 1.0);
}


void main(void)
{
    vec4 wire_color = calc_wireframe_color();
    bool normals = true;
 
    // Calculate edge distances for wireframe
    float ha, hb, hc;
    if (wireframe)
    {
        vec2 viewport = vec2(1024, 768);
        vec2 p0 = vec2(viewport * (gl_in[0].gl_Position.xy / gl_in[0].gl_Position.w));
        vec2 p1 = vec2(viewport * (gl_in[1].gl_Position.xy / gl_in[1].gl_Position.w));
        vec2 p2 = vec2(viewport * (gl_in[2].gl_Position.xy / gl_in[2].gl_Position.w));

        float a = length(p1 - p2);
        float b = length(p2 - p0);
        float c = length(p1 - p0);
        float alpha = acos( (b*b + c*c - a*a) / (2.0*b*c) );
        float beta = acos( (a*a + c*c - b*b) / (2.0*a*c) );
        ha = abs( c * sin( beta ) );
        hb = abs( c * sin( alpha ) );
        hc = abs( b * sin( alpha ) );
    } else
    {
        ha = hb = hc = 0.0;
    }


    
        


    // Output verts
    for(int i = 0; i < gl_in.length(); ++i)
    {
        gl_Position = proj * view * gl_in[i].gl_Position;
        vertex.position = gl_in[i].gl_Position.xyz;
        // out_uv = in_uv[i];
        vertex.tex_coord = in_uv[i];
        vertex.normal = in_normal[i];
        // out_view_vec = in_view_vec[i];
        // out_world_pos = in_world_pos[i];
        // wire_color = wire_color;
        vertex.color = wire_color;

        if (i == 0)
            edge_dist = vec3(ha, 0, 0);
        else if (i == 1)
            edge_dist = vec3(0, hb, 0);
        else
            edge_dist = vec3(0, 0, hc);

        EmitVertex();

    }

    // This closes the the triangle
    gl_Position = proj * view * gl_in[0].gl_Position;
    vertex.position = gl_in[0].gl_Position.xyz;
    edge_dist = vec3(ha, 0, 0);
    // out_uv = in_uv[0];
    vertex.tex_coord = in_uv[0];
    vertex.normal = in_normal[0];
    // out_view_vec = in_view_vec[0];
    // out_world_pos = in_world_pos[0];
    // gs.wire_color = wire_color;
    vertex.color = wire_color;
    EmitVertex();
    EndPrimitive();

    if(normals) {
        for(int i = 0; i < gl_in.length(); ++i) {
            vec3 normal = texture(normal, in_uv[i]).rgb;
            normal = normal * 2. - 1.;

            vec3 vertex_normal = normalize(in_normal[i]);
            vec3 vertex_tangent = normalize(vec3(0.0, 0.0, 1.0));
            vec3 vertex_bitangent = normalize(cross(vertex_normal, vertex_tangent));
            mat3 vertex_basis = mat3(vertex_tangent, vertex_bitangent, vertex_normal);
            normal = normalize(vertex_basis * normal);

            vec3 P = gl_in[i].gl_Position.xyz;
            vec3 N = normal;

            gl_Position = proj * view * gl_in[i].gl_Position;
            vertex.position = gl_in[i].gl_Position.xyz;
            vertex.tex_coord = in_uv[i];
            vertex.normal = normal;
            vertex.color = vec4(1.0, 0.0, 0.0, 1.0);
            EmitVertex();
            
            gl_Position = proj * view * vec4(gl_in[i].gl_Position.xyz + N * 0.25, 1.0);
            vertex.position = gl_Position.xyz;
            vertex.tex_coord = in_uv[i];
            vertex.normal = normal;
            vertex.color = vec4(1.0, 0.0, 0.0, 1.0);
            EmitVertex();
            EndPrimitive();
        }
    }

    
}"
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpName %main "main"
               OpName %in_tesselation_level "in_tesselation_level"
               OpName %Args "Args"
               OpMemberName %Args 0 "model"
               OpMemberName %Args 1 "terrain_size"
               OpMemberName %Args 2 "terrain_height_scale"
               OpMemberName %Args 3 "terrain_height_offset"
               OpMemberName %Args 4 "wireframe"
               OpName %_ ""
               OpName %gl_PerVertex "gl_PerVertex"
               OpMemberName %gl_PerVertex 0 "gl_Position"
               OpMemberName %gl_PerVertex 1 "gl_PointSize"
               OpMemberName %gl_PerVertex 2 "gl_ClipDistance"
               OpMemberName %gl_PerVertex 3 "gl_CullDistance"
               OpName %gl_in "gl_in"
               OpName %gl_PerVertex_0 "gl_PerVertex"
               OpMemberName %gl_PerVertex_0 0 "gl_Position"
               OpMemberName %gl_PerVertex_0 1 "gl_PointSize"
               OpMemberName %gl_PerVertex_0 2 "gl_ClipDistance"
               OpMemberName %gl_PerVertex_0 3 "gl_CullDistance"
               OpName %__0 ""
               OpName %Projview "Projview"
               OpMemberName %Projview 0 "proj"
               OpMemberName %Projview 1 "view"
               OpName %__1 ""
               OpName %VertexData "VertexData"
               OpMemberName %VertexData 0 "position"
               OpMemberName %VertexData 1 "normal"
               OpMemberName %VertexData 2 "tex_coord"
               OpMemberName %VertexData 3 "color"
               OpName %vertex "vertex"
               OpName %in_uv "in_uv"
               OpName %in_normal "in_normal"
               OpName %edge_dist "edge_dist"
               OpName %normal "normal"
               OpName %in_view_vec "in_view_vec"
               OpName %in_world_pos "in_world_pos"
               OpDecorate %in_tesselation_level Location 4
               OpMemberDecorate %Args 0 ColMajor
               OpMemberDecorate %Args 0 Offset 0
               OpMemberDecorate %Args 0 MatrixStride 16
               OpMemberDecorate %Args 1 Offset 64
               OpMemberDecorate %Args 2 Offset 72
               OpMemberDecorate %Args 3 Offset 76
               OpMemberDecorate %Args 4 Offset 80
               OpDecorate %Args Block
               OpDecorate %_ DescriptorSet 1
               OpDecorate %_ Binding 0
               OpMemberDecorate %gl_PerVertex 0 BuiltIn Position
               OpMemberDecorate %gl_PerVertex 1 BuiltIn PointSize
               OpMemberDecorate %gl_PerVertex 2 BuiltIn ClipDistance
               OpMemberDecorate %gl_PerVertex 3 BuiltIn CullDistance
               OpDecorate %gl_PerVertex Block
               OpMemberDecorate %gl_PerVertex_0 0 BuiltIn Position
               OpMemberDecorate %gl_PerVertex_0 1 BuiltIn PointSize
               OpMemberDecorate %gl_PerVertex_0 2 BuiltIn ClipDistance
               OpMemberDecorate %gl_PerVertex_0 3 BuiltIn CullDistance
               OpDecorate %gl_PerVertex_0 Block
               OpMemberDecorate %Projview 0 ColMajor
               OpMemberDecorate %Projview 0 Offset 0
               OpMemberDecorate %Projview 0 MatrixStride 16
               OpMemberDecorate %Projview 1 ColMajor
               OpMemberDecorate %Projview 1 Offset 64
               OpMemberDecorate %Projview 1 MatrixStride 16
               OpDecorate %Projview Block
               OpDecorate %__1 DescriptorSet 0
               OpDecorate %__1 Binding 0
               OpDecorate %VertexData Block
               OpDecorate %vertex Location 0
               OpDecorate %in_uv Location 1
               OpDecorate %in_normal Location 0
               OpDecorate %edge_dist NoPerspective
               OpDecorate %edge_dist Location 4
               OpDecorate %normal DescriptorSet 1
               OpDecorate %normal Binding 2
               OpDecorate %in_view_vec Location 2
               OpDecorate %in_world_pos Location 3
       %void = OpTypeVoid
          %4 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
       %uint = OpTypeInt 32 0
     %uint_3 = OpConstant %uint 3
%_arr_float_uint_3 = OpTypeArray %float %uint_3
%_ptr_Input__arr_float_uint_3 = OpTypePointer Input %_arr_float_uint_3
%in_tesselation_level = OpVariable %_ptr_Input__arr_float_uint_3 Input
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Input_float = OpTypePointer Input %float
   %float_64 = OpConstant %float 64
       %bool = OpTypeBool
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
         %29 = OpConstantComposite %v4float %float_0 %float_0 %float_1 %float_1
   %float_32 = OpConstant %float 32
         %38 = OpConstantComposite %v4float %float_0 %float_1 %float_1 %float_1
   %float_16 = OpConstant %float 16
         %47 = OpConstantComposite %v4float %float_1 %float_1 %float_0 %float_1
    %float_8 = OpConstant %float 8
         %56 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
         %59 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
%mat4v4float = OpTypeMatrix %v4float 4
    %v2float = OpTypeVector %float 2
       %Args = OpTypeStruct %mat4v4float %v2float %float %float %uint
%_ptr_Uniform_Args = OpTypePointer Uniform %Args
          %_ = OpVariable %_ptr_Uniform_Args Uniform
      %int_4 = OpConstant %int 4
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
 %float_1024 = OpConstant %float 1024
  %float_768 = OpConstant %float 768
         %85 = OpConstantComposite %v2float %float_1024 %float_768
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%gl_PerVertex = OpTypeStruct %v4float %float %_arr_float_uint_1 %_arr_float_uint_1
%_arr_gl_PerVertex_uint_3 = OpTypeArray %gl_PerVertex %uint_3
%_ptr_Input__arr_gl_PerVertex_uint_3 = OpTypePointer Input %_arr_gl_PerVertex_uint_3
      %gl_in = OpVariable %_ptr_Input__arr_gl_PerVertex_uint_3 Input
%_ptr_Input_v4float = OpTypePointer Input %v4float
      %int_1 = OpConstant %int 1
      %int_2 = OpConstant %int 2
    %float_2 = OpConstant %float 2
      %int_3 = OpConstant %int 3
%gl_PerVertex_0 = OpTypeStruct %v4float %float %_arr_float_uint_1 %_arr_float_uint_1
%_ptr_Output_gl_PerVertex_0 = OpTypePointer Output %gl_PerVertex_0
        %__0 = OpVariable %_ptr_Output_gl_PerVertex_0 Output
   %Projview = OpTypeStruct %mat4v4float %mat4v4float
%_ptr_Uniform_Projview = OpTypePointer Uniform %Projview
        %__1 = OpVariable %_ptr_Uniform_Projview Uniform
%_ptr_Uniform_mat4v4float = OpTypePointer Uniform %mat4v4float
%_ptr_Output_v4float = OpTypePointer Output %v4float
    %v3float = OpTypeVector %float 3
 %VertexData = OpTypeStruct %v3float %v3float %v2float %v4float
%_ptr_Output_VertexData = OpTypePointer Output %VertexData
     %vertex = OpVariable %_ptr_Output_VertexData Output
%_ptr_Output_v3float = OpTypePointer Output %v3float
%_arr_v2float_uint_3 = OpTypeArray %v2float %uint_3
%_ptr_Input__arr_v2float_uint_3 = OpTypePointer Input %_arr_v2float_uint_3
      %in_uv = OpVariable %_ptr_Input__arr_v2float_uint_3 Input
%_ptr_Input_v2float = OpTypePointer Input %v2float
%_ptr_Output_v2float = OpTypePointer Output %v2float
%_arr_v3float_uint_3 = OpTypeArray %v3float %uint_3
%_ptr_Input__arr_v3float_uint_3 = OpTypePointer Input %_arr_v3float_uint_3
  %in_normal = OpVariable %_ptr_Input__arr_v3float_uint_3 Input
%_ptr_Input_v3float = OpTypePointer Input %v3float
  %edge_dist = OpVariable %_ptr_Output_v3float Output
        %318 = OpTypeImage %float 2D 0 0 0 1 Unknown
        %319 = OpTypeSampledImage %318
%_ptr_UniformConstant_319 = OpTypePointer UniformConstant %319
     %normal = OpVariable %_ptr_UniformConstant_319 UniformConstant
        %338 = OpConstantComposite %v3float %float_0 %float_0 %float_1
%mat3v3float = OpTypeMatrix %v3float 3
 %float_0_25 = OpConstant %float 0.25
%in_view_vec = OpVariable %_ptr_Input__arr_v3float_uint_3 Input
%in_world_pos = OpVariable %_ptr_Input__arr_v3float_uint_3 Input
        %489 = OpConstantComposite %v3float %float_1 %float_1 %float_1
       %main = OpFunction %void None %4
          %6 = OpLabel
               OpBranch %442
        %442 = OpLabel
               OpLoopMerge %443 %444 None
               OpBranch %445
        %445 = OpLabel
               OpLine %1 46 0
        %446 = OpAccessChain %_ptr_Input_float %in_tesselation_level %int_0
        %447 = OpLoad %float %446
        %448 = OpFOrdEqual %bool %447 %float_64
               OpSelectionMerge %449 None
               OpBranchConditional %448 %450 %451
        %451 = OpLabel
        %454 = OpFOrdGreaterThanEqual %bool %447 %float_32
               OpSelectionMerge %455 None
               OpBranchConditional %454 %456 %457
        %457 = OpLabel
        %460 = OpFOrdGreaterThanEqual %bool %447 %float_16
               OpSelectionMerge %461 None
               OpBranchConditional %460 %462 %463
        %463 = OpLabel
        %466 = OpFOrdGreaterThanEqual %bool %447 %float_8
               OpSelectionMerge %467 None
               OpBranchConditional %466 %468 %469
        %469 = OpLabel
               OpLine %1 55 0
               OpBranch %443
        %468 = OpLabel
               OpLine %1 53 0
               OpBranch %443
        %467 = OpLabel
               OpUnreachable
        %462 = OpLabel
               OpLine %1 51 0
               OpBranch %443
        %461 = OpLabel
               OpUnreachable
        %456 = OpLabel
               OpLine %1 49 0
               OpBranch %443
        %455 = OpLabel
               OpUnreachable
        %450 = OpLabel
               OpLine %1 47 0
               OpBranch %443
        %449 = OpLabel
               OpUnreachable
        %444 = OpLabel
               OpBranch %442
        %443 = OpLabel
        %471 = OpPhi %v4float %59 %469 %56 %468 %47 %462 %38 %456 %29 %450
               OpLine %1 66 0
         %75 = OpAccessChain %_ptr_Uniform_uint %_ %int_4
         %76 = OpLoad %uint %75
         %78 = OpINotEqual %bool %76 %uint_0
               OpSelectionMerge %80 None
               OpBranchConditional %78 %79 %205
        %205 = OpLabel
               OpBranch %80
         %79 = OpLabel
         %95 = OpAccessChain %_ptr_Input_v4float %gl_in %int_0 %int_0
         %96 = OpLoad %v4float %95
         %97 = OpVectorShuffle %v2float %96 %96 0 1
         %98 = OpAccessChain %_ptr_Input_float %gl_in %int_0 %int_0 %uint_3
         %99 = OpLoad %float %98
        %100 = OpCompositeConstruct %v2float %99 %99
        %101 = OpFDiv %v2float %97 %100
        %102 = OpFMul %v2float %85 %101
        %109 = OpAccessChain %_ptr_Input_v4float %gl_in %int_1 %int_0
        %110 = OpLoad %v4float %109
        %111 = OpVectorShuffle %v2float %110 %110 0 1
        %112 = OpAccessChain %_ptr_Input_float %gl_in %int_1 %int_0 %uint_3
        %113 = OpLoad %float %112
        %114 = OpCompositeConstruct %v2float %113 %113
        %115 = OpFDiv %v2float %111 %114
        %116 = OpFMul %v2float %85 %115
        %123 = OpAccessChain %_ptr_Input_v4float %gl_in %int_2 %int_0
        %124 = OpLoad %v4float %123
        %125 = OpVectorShuffle %v2float %124 %124 0 1
        %126 = OpAccessChain %_ptr_Input_float %gl_in %int_2 %int_0 %uint_3
        %127 = OpLoad %float %126
        %128 = OpCompositeConstruct %v2float %127 %127
        %129 = OpFDiv %v2float %125 %128
        %130 = OpFMul %v2float %85 %129
        %138 = OpFSub %v2float %116 %130
        %139 = OpExtInst %float %2 Length %138
        %143 = OpFSub %v2float %130 %102
        %144 = OpExtInst %float %2 Length %143
        %148 = OpFSub %v2float %116 %102
        %149 = OpExtInst %float %2 Length %148
        %153 = OpFMul %float %144 %144
        %156 = OpFMul %float %149 %149
        %157 = OpFAdd %float %153 %156
        %160 = OpFMul %float %139 %139
        %161 = OpFSub %float %157 %160
        %164 = OpFMul %float %float_2 %144
        %166 = OpFMul %float %164 %149
        %167 = OpFDiv %float %161 %166
        %168 = OpExtInst %float %2 Acos %167
        %176 = OpFAdd %float %160 %156
        %180 = OpFSub %float %176 %153
        %182 = OpFMul %float %float_2 %139
        %184 = OpFMul %float %182 %149
        %185 = OpFDiv %float %180 %184
        %186 = OpExtInst %float %2 Acos %185
        %190 = OpExtInst %float %2 Sin %186
        %191 = OpFMul %float %149 %190
        %192 = OpExtInst %float %2 FAbs %191
        %196 = OpExtInst %float %2 Sin %168
        %197 = OpFMul %float %149 %196
        %198 = OpExtInst %float %2 FAbs %197
        %203 = OpFMul %float %144 %196
        %204 = OpExtInst %float %2 FAbs %203
               OpBranch %80
         %80 = OpLabel
        %479 = OpPhi %float %float_0 %205 %198 %79
        %477 = OpPhi %float %float_0 %205 %204 %79
        %474 = OpPhi %float %float_0 %205 %192 %79
               OpBranch %208
        %208 = OpLabel
        %472 = OpPhi %int %int_0 %80 %281 %266
        %215 = OpSLessThan %bool %472 %int_3
               OpLoopMerge %210 %266 None
               OpBranchConditional %215 %209 %210
        %209 = OpLabel
               OpLine %1 94 0
        %223 = OpAccessChain %_ptr_Uniform_mat4v4float %__1 %int_0
        %224 = OpLoad %mat4v4float %223
        %225 = OpAccessChain %_ptr_Uniform_mat4v4float %__1 %int_1
        %226 = OpLoad %mat4v4float %225
        %227 = OpMatrixTimesMatrix %mat4v4float %224 %226
        %229 = OpAccessChain %_ptr_Input_v4float %gl_in %472 %int_0
        %230 = OpLoad %v4float %229
        %231 = OpMatrixTimesVector %v4float %227 %230
        %233 = OpAccessChain %_ptr_Output_v4float %__0 %int_0
               OpStore %233 %231
        %241 = OpVectorShuffle %v3float %230 %230 0 1 2
        %243 = OpAccessChain %_ptr_Output_v3float %vertex %int_0
               OpStore %243 %241
        %249 = OpAccessChain %_ptr_Input_v2float %in_uv %472
        %250 = OpLoad %v2float %249
        %252 = OpAccessChain %_ptr_Output_v2float %vertex %int_2
               OpStore %252 %250
        %258 = OpAccessChain %_ptr_Input_v3float %in_normal %472
        %259 = OpLoad %v3float %258
        %260 = OpAccessChain %_ptr_Output_v3float %vertex %int_1
               OpStore %260 %259
        %262 = OpAccessChain %_ptr_Output_v4float %vertex %int_3
               OpStore %262 %471
        %264 = OpIEqual %bool %472 %int_0
               OpSelectionMerge %266 None
               OpBranchConditional %264 %265 %270
        %270 = OpLabel
        %272 = OpIEqual %bool %472 %int_1
               OpSelectionMerge %274 None
               OpBranchConditional %272 %273 %277
        %277 = OpLabel
        %279 = OpCompositeConstruct %v3float %float_0 %float_0 %477
               OpStore %edge_dist %279
               OpBranch %274
        %273 = OpLabel
        %276 = OpCompositeConstruct %v3float %float_0 %479 %float_0
               OpStore %edge_dist %276
               OpBranch %274
        %274 = OpLabel
               OpBranch %266
        %265 = OpLabel
        %269 = OpCompositeConstruct %v3float %474 %float_0 %float_0
               OpStore %edge_dist %269
               OpBranch %266
        %266 = OpLabel
               OpLine %1 111 0
               OpEmitVertex
        %281 = OpIAdd %int %472 %int_1
               OpBranch %208
        %210 = OpLabel
               OpLine %1 116 0
        %282 = OpAccessChain %_ptr_Uniform_mat4v4float %__1 %int_0
        %283 = OpLoad %mat4v4float %282
        %284 = OpAccessChain %_ptr_Uniform_mat4v4float %__1 %int_1
        %285 = OpLoad %mat4v4float %284
        %286 = OpMatrixTimesMatrix %mat4v4float %283 %285
        %287 = OpAccessChain %_ptr_Input_v4float %gl_in %int_0 %int_0
        %288 = OpLoad %v4float %287
        %289 = OpMatrixTimesVector %v4float %286 %288
        %290 = OpAccessChain %_ptr_Output_v4float %__0 %int_0
               OpStore %290 %289
        %293 = OpVectorShuffle %v3float %288 %288 0 1 2
        %294 = OpAccessChain %_ptr_Output_v3float %vertex %int_0
               OpStore %294 %293
        %296 = OpCompositeConstruct %v3float %474 %float_0 %float_0
               OpStore %edge_dist %296
               OpLine %1 120 0
        %297 = OpAccessChain %_ptr_Input_v2float %in_uv %int_0
        %298 = OpLoad %v2float %297
        %299 = OpAccessChain %_ptr_Output_v2float %vertex %int_2
               OpStore %299 %298
               OpLine %1 121 0
        %300 = OpAccessChain %_ptr_Input_v3float %in_normal %int_0
        %301 = OpLoad %v3float %300
        %302 = OpAccessChain %_ptr_Output_v3float %vertex %int_1
               OpStore %302 %301
        %304 = OpAccessChain %_ptr_Output_v4float %vertex %int_3
               OpStore %304 %471
               OpLine %1 126 0
               OpEmitVertex
               OpLine %1 127 0
               OpEndPrimitive
               OpBranch %309
        %309 = OpLabel
        %475 = OpPhi %int %int_0 %210 %427 %310
        %315 = OpSLessThan %bool %475 %int_3
               OpLoopMerge %311 %310 None
               OpBranchConditional %315 %310 %311
        %310 = OpLabel
               OpLine %1 131 0
        %322 = OpLoad %319 %normal
        %324 = OpAccessChain %_ptr_Input_v2float %in_uv %475
        %325 = OpLoad %v2float %324
        %326 = OpImageSampleExplicitLod %v4float %322 %325 Lod %float_0
        %327 = OpVectorShuffle %v3float %326 %326 0 1 2
        %329 = OpVectorTimesScalar %v3float %327 %float_2
        %331 = OpFSub %v3float %329 %489
        %334 = OpAccessChain %_ptr_Input_v3float %in_normal %475
        %335 = OpLoad %v3float %334
        %336 = OpExtInst %v3float %2 Normalize %335
        %342 = OpExtInst %v3float %2 Cross %336 %338
        %343 = OpExtInst %v3float %2 Normalize %342
        %362 = OpCompositeConstruct %mat3v3float %338 %343 %336
        %365 = OpMatrixTimesVector %v3float %362 %331
        %366 = OpExtInst %v3float %2 Normalize %365
        %380 = OpAccessChain %_ptr_Input_v4float %gl_in %475 %int_0
        %381 = OpLoad %v4float %380
        %382 = OpMatrixTimesVector %v4float %286 %381
               OpStore %290 %382
        %387 = OpVectorShuffle %v3float %381 %381 0 1 2
               OpStore %294 %387
               OpStore %299 %325
               OpStore %302 %366
               OpStore %304 %59
               OpLine %1 148 0
               OpEmitVertex
        %407 = OpVectorTimesScalar %v3float %366 %float_0_25
        %408 = OpFAdd %v3float %387 %407
        %409 = OpCompositeExtract %float %408 0
        %410 = OpCompositeExtract %float %408 1
        %411 = OpCompositeExtract %float %408 2
        %412 = OpCompositeConstruct %v4float %409 %410 %411 %float_1
        %413 = OpMatrixTimesVector %v4float %286 %412
               OpStore %290 %413
        %416 = OpLoad %v4float %290
        %417 = OpVectorShuffle %v3float %416 %416 0 1 2
               OpStore %294 %417
               OpStore %299 %325
               OpStore %302 %366
               OpStore %304 %59
               OpLine %1 155 0
               OpEmitVertex
               OpLine %1 156 0
               OpEndPrimitive
        %427 = OpIAdd %int %475 %int_1
               OpBranch %309
        %311 = OpLabel
               OpReturn
               OpFunctionEnd
